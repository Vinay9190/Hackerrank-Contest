#python Brute Force
n = int(input());
k = int(input())
s = input();
ans = 0;
n= len(s)
for i in range(n-k+1):
    x = 0
    for j in range(i,i+k):
        
        x += int(s[j]);
        
    ans = max(ans,x);
print(ans)





#Python Optimize
n = int(input())
k = int(input())
s = input()
ans = 0
x = 0
for i in range(k):
    x+=int(s[i])
j = 0
for i in range(k,n):
    x = x - int(s[j]) + int(s[i])
    j+=1
    ans = max(ans,x);
print(ans)






# Java Optimize
/*package whatever //do not write package name here */

import java.io.*;

public class Ideone {
    
    
    public static void main (String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int k = Integer.parseInt(br.readLine());
        String s = br.readLine();
        n = s.length();
        int ans = 0;
        
        int x = 0;
        
        for(int i=0;i<k;i++){
            x += s.charAt(i)-48;
           
        }
        ans = Math.max(ans,x);
        
        int j=0;
        for(int i=k;i<n;i++){
            x = x-(s.charAt(j++)-48);
            x += s.charAt(i)-48;
            ans = Math.max(ans,x);
            
        }
        System.out.println(ans);
        
    }
}
